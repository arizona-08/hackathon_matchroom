services:
  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    container_name: frontend
    restart: unless-stopped
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Prevent host's node_modules from being mounted
      - /app/.nuxt         # Same for .nuxt
    networks:
      - app-network
    ports:
      - "3000:3000"
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`matchroom.online`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=le"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    user: 1000:1000
    container_name: backend
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/html
    networks:
      - app-network
    depends_on:
      - mariadb
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.matchroom.online`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=le"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:${DB_PORT}"
    volumes:
      - data:/var/lib/mysql
    networks:
      - app-network
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true" # d√©sactive-le en prod, permet de voir le dashboard sur :8080
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.le.acme.email=ton-email@example.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Dashboard Traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - app-network
volumes:
  data:

networks:
  app-network:
    driver: bridge
  